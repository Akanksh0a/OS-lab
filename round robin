#include <stdio.h>

void roundRobin(int arrival_time[], int burst_time[], int n, int quantum) {
    int remaining_time[n],waiting_time[n],turnaround_time[n]; 
    
    for (int i = 0; i < n; i++) {
        remaining_time[i] = burst_time[i];
        waiting_time[i] = 0;
        turnaround_time[i] = 0;
    }
    
    int t = 0; // Current time
    while (1) {
        int done = 1;
        for (int i = 0; i < n; i++) {
            if (remaining_time[i] > 0) {
                done = 0;
                if (remaining_time[i] > quantum) {
                    t += quantum;
                    remaining_time[i] -= quantum;
                    printf("Process %d executed for time quantum %d\n", i, quantum);
                } else {
                    t += remaining_time[i];
                    waiting_time[i] += t - arrival_time[i] - burst_time[i]; // Calculate waiting time
                    printf("Process %d executed for time quantum %d\n", i, remaining_time[i]);
                    remaining_time[i] = 0;
                }
            }
        }
        
        if (done == 1) {
            break;
        }
    }
    
    // Calculate turnaround time for each process
    for (int i = 0; i < n; i++) {
        turnaround_time[i] = burst_time[i] + waiting_time[i];
    }
    
    // Print waiting time and turnaround time for each process
    printf("\nProcess\tWaiting Time\tTurnaround Time\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t\t%d\n", i, waiting_time[i], turnaround_time[i]);
    }
    
    // Calculate and print average waiting and turnaround time
    int total_waiting_time = 0, total_turnaround_time = 0;
    for (int i = 0; i < n; i++) {
        total_waiting_time += waiting_time[i];
        total_turnaround_time += turnaround_time[i];
    }
    printf("\nAverage Waiting Time: %.2f", (float)total_waiting_time / n);
    printf("\nAverage Turnaround Time: %.2f", (float)total_turnaround_time / n);
}

int main() {
    int n, quantum;
    printf("Enter the number of processes: ");
    scanf("%d", &n);
    
    int arrival_time[n], burst_time[n];
    
    printf("Enter the arrival time and burst time for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d: ", i);
        scanf("%d %d", &arrival_time[i], &burst_time[i]);
    }
    
    printf("Enter the time quantum: ");
    scanf("%d", &quantum);
    
    roundRobin(arrival_time, burst_time, n, quantum);
    
    return 0;
}
